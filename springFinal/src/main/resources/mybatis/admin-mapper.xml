<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	mapper는 구문을 만들 수 있는 영역
	일반적으로 테이블당 1개씩 mapper를 둔다아
	
	-namespace : 영역을 외부에서 부르기 위한 별칭
	
	알아야 할 설정값
	- id : 구문을 외부에서 호출하기 위한 식별값
	- parameterType : 구문을 실행하기 위해 필요한 데이터유형
	- resultTypre : 구문이 실행된 결과 유형(반환형과 유사)
 -->
 
<mapper namespace="admin">	
	  <insert id="major_regist" parameterType="majorDto">
   
      INSERT INTO major VALUES(
      					major_no_seq.nextval, 
                        #{major_type},
                        sysdate,
                        #{major_number}
                           )
   
   	</insert>
   	
   	<select id="major_list" resultType="majorDto">
   		select * from major
   	</select>
   	
   	<select id="major_get" parameterType="majorDto" resultType="majorDto">
   		select * from major where major_type = #{major_type}
   	</select>
   	<delete id="major_delete" parameterType="int">
   		delete major where major_no = #{major_no}
   	</delete>
   	
	<select id="admin_login" parameterType="adminDto" resultType="adminDto">
   		select * from admin where admin_id = #{admin_id} and admin_pw = #{admin_pw}
   	</select>
   	
   	
   	<select id="off_List" resultType="schoolOffDto">
		SELECT * FROM SCHOOL_OFF so
      LEFT OUTER JOIN student st ON so.student_no = st.student_no 
	</select>
	
	<select id="on_List" resultType="schoolReturnDto">
		SELECT * FROM SCHOOL_RETURN so
      LEFT OUTER JOIN student st ON so.student_no = st.student_no 
	</select>
	
	
	<select id="unionList" resultType="schoolOffDto" parameterType="map">
	
	SELECT * FROM SCHOOL_OFF so
      LEFT OUTER JOIN student st ON so.student_no = st.student_no
	<if test="type !=null and keyword !=null">
	where instr(${type}, #{keyword}) >0
	</if>
	order by school_off_no desc
	</select>
	
	<select id="unionList2" resultType="schoolReturnDto" parameterType="map">
	
	SELECT * FROM SCHOOL_Return so
      LEFT OUTER JOIN student st ON so.student_no = st.student_no
	<if test="type !=null and keyword !=null">
	where instr(${type}, #{keyword}) >0
	</if>
	order by school_return_no desc
	</select>
	
   	
   	<update id="update" parameterType="int">
   	update student set student_state = '휴학' where student_no = #{student_no}
   	</update>
   	<update id="update2" parameterType="int">
   	update student set student_state = '재학' where student_no = #{student_no}
   	</update>
   	
   	<select id="get" resultType="studentDto" parameterType="studentDto">
		SELECT * FROM student WHERE student_no = #{student_no}
   	</select>
   	
   	<delete id="delete" parameterType="int">
		DELETE school_off WHERE student_no=#{student_no} 
	</delete>
	
	<delete id="delete2" parameterType="int">
		DELETE school_Return WHERE student_no=#{student_no} 
	</delete>
</mapper>